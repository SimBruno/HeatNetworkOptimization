# Heat Exchanger Network design


After establishing the minimum energy requirement, the primary objective of heat exchanger network design is to strategically position heat exchangers within the process to attain the heat recovery target. This involves identifying the hot and cold streams for heat exchange, specifying the flow rates on both sides of the heat exchanger, and determining the optimal sizing for each heat exchanger to be integrated into the system.

Your reports should include the following aspects:

## Identification of Penalizing Heat Exchangers

<!--Identify and list the heat exchangers that have the greatest impact on the energy penalty. Conversely, define a list of non-penalizing heat exchangers that require no modification. By removing the streams involved, establish subsets of hot and cold streams for which the heat exchanger network (interconnected heat exchangers) needs to be designed.-->
Thanks to the pinch analysis effectuated in the previous section it is possible to identify penalizing heat exchangers.
There are four types of penalizing heat exchangers:

- A cold utility cooling down a hot stream above the pinch

- A hot utility heating up a cold stream below the pinch

- A heat exchanger heating up a cold stream under the pinch using a hot stream above the pinch

- A mixer where the fluids it is mixing are not on the same side of the pinch point, i.e. the cooler fluid intake is below the pinch and the warmer fluid intake is above the pinch


Thanks to having calculated the pinch point at 67.5 °C in the previous section, it is now easy to find the penalizing heat exchangers in each section.

Furthermore, it is possible to calculate the penalty caused by each penalizing heat exchanger, as it is simply the amount of heat utilized by said exchanger.

The Wastewater and sludge production section will be skipped as it does not utilize any heat exchangers.

### Pasteurisation

```{python PastPen, echo = F, eval = F}
import pandas as pd
import numpy as np
from IPython.display import display, HTML

past_pen = {'Exchangers': ['Refrigeration', 'Past1', 'Past2', 'Past3', 'Past4', 'Past5', 'Past6', 'Past7', 'Mixer'],
        'Penalizing': ['Not Penalizing', 'Penalizing', 'Penalizing', 'Penalizing', 'Not Penalizing', 'Penalizing', 'Penalizing', 'Penalizing', 'Not Penalizing'],
        'Penalty (kW)': ['0', '1691.65', '142.88', '285.76', '0', '17.52', '35.61', '127', '0']}
df = pd.DataFrame(past_pen)
df = df.set_index('Exchangers')
df = df.round(2)
HTML(df.to_html())
```

### Evaporation

TO BE CORRECTED ONCE THE EVAPORATION SECTION IS CORRECTED

The evaporators are equivalent to mixers.

```{python EvapPen, echo = F, eval = F}

evap_pen = {'Exchangers': ['P1', 'P2', 'P3', 'P4', 'P5', 'Evap1', 'Evap2', 'Evap3'],
        'Penalizing': ['Not Penalizing', 'Not Penalizing', 'Not Penalizing', 'Penalizing', 'Not Penalizing', 'Penalizing', 'Penalizing', 'Not Penalizing'],
        'Penalty (kW)': ['0', '0', '0', '97.89', '0', '3736.00', '3008.00', '0']}
df = pd.DataFrame(evap_pen)
df = df.set_index('Exchangers')
HTML(df.to_html())
```

### Drum Dryers

```{python DrumPen, echo = F, eval = F}

dryer_pen = {'Exchangers': ['Dryer 1', 'Dryer 2', 'DDHEX-1', 'DDHEX-2', 'Cooling Water'],
        'Penalizing': ['Not Penalizing', 'Penalizing', 'Penalizing', 'Not Penalizing', 'Not Penalizing'],
        'Penalty (kW)': ['0', '67.08', '0.11', '0', '0']}
df = pd.DataFrame(dryer_pen)
df = df.set_index('Exchangers')
HTML(df.to_html())
```

### Cleaning in Place

```{python CIPPen, echo = F, eval = F}

CIP_pen = {'Exchangers': ['Mixer', 'CIP-HEX', 'Shower-1', 'Shower-2', 'Cooling Water'],
        'Penalizing': ['Penalizing', 'Penalizing', 'Penalizing', 'Penalizing', 'Penalizing'],
        'Penalty (kW)': ['175.81', '334.72', '41.84', '41.84', '225.94']}
df = pd.DataFrame(CIP_pen)
df = df.set_index('Exchangers')
HTML(df.to_html())
```

### Rivella Production

R-Mixer1 and R-Mixer2 are ignored because there is no heat exchange occurring in these mixers.

```{python RivPen, echo = F, eval = F}

riv_pen = {'Exchangers': ['Fermentation', 'Evaporator', 'R-HEX1', 'R-Mixer3', 'Green Rivella HEX', 'R-Mixer4', 'Red Rivella HEX'],
        'Penalizing': ['Not Penalizing', 'Penalizing', 'Penalizing', 'Not Penalizing', 'Not Penalizing', 'Not Penalizing', 'Not Penalizing'],
        'Penalty (kW)': ['0', '579.42', '40.11', '0', '0', '0', '0']}
df = pd.DataFrame(riv_pen)
df = df.set_index('Exchangers')
HTML(df.to_html())
```

### Digester

```{python DigPen, echo = F, eval = F}

dig_pen = {'Exchangers': ['Digestor', 'Steam Dryer'],
        'Penalizing': ['Not Penalizing', 'Penalizing'],
        'Penalty (kW)': ['0', '28.75']}
df = pd.DataFrame(dig_pen)
df = df.set_index('Exchangers')
HTML(df.to_html())
```

## Application of Pinch Design Method

Determine the composite curves and identify the pinch point for each subset. This step also helps define the list of utility streams to be considered for the heat exchanger network design.

Implement the pinch design method to generate a network configuration. With each heat exchanger placement, calculate the heat exchanged, flow rates, temperature conditions, size, and corresponding cost. Utilize loop and path following techniques to attempt the elimination of small heat exchangers. Evaluate the trade-off between cost (changes in the energy bill) and benefits (investment) in this process.
### Heat Exchanger Network Design

### Economic Analysis of the Heat Exchanger Network

The economic analysis of the heat exchanger network is done by calculating both the capital cost and the operating cost. The capital cost is calculated by using the following equation (similar to what used in task 4):

$$ \text{INV} = a*F_{BM} \cdot \sum C_{p}\cdot e $$

where 

$$C_{p} = \frac{I_{t}}{I_{ref}}\cdot 10^{k1\cdot k2\cdot log(\text{Area})}$$

$$\text{Area} = \frac{Q_{HX}}{U\cdot LMTD_{HX}}$$ 

where LMTD is taken in the corrected domain ($\Delta T_{min}$ is considered for $T_{cold}$ and $T_{hot}$)

The following values for the capital costs of all the 9 HX used are compiled in the table below:

```{python CapCostHEN, echo = F, eval = F}
dt_A = [0, 0, 0, 0, 0, 0, 0, 0, 0, 5 ]
dt_B = [0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.6 ]
Q = [83.5, 59.5, 58.5, 25.1, 9.6, 142.9, 58.5, 25, 16.36, 17.52]
LMTD = []
area = []
Cp = []
U = 0.500 #kW/m^2°C, assumption based on alpha_H20
dtmin = 5 #°C
CEPCI2019=603.1 
CEPCI1998=389.5 #https://personalpages.manchester.ac.uk/staff/tom.rodgers/Interactive_graphs/CEPCI.html?reactors/CEPCI/index.html
K1=3.6788 #sl 12 T4.1 assumption spiral plate HX
K2=0.4412
FBM=4.74 #assumption fluid sl 10 T4.1
i=0.05 #sl 8 T4.2
e=0.92 #€/$ exchange rate 2023 Nov 
n=20
ANNUALIZATIONFACTOR = (i*(1+i)**n)/((1+i)**n-1)

for i in range(len(Q)):
        if dt_A[i] == dt_B[i]: #if the two temperatures difference are the same when cp_hot = cp_cold , then the LMTD is equal to the min temperature difference
            LMTD.append(dtmin)
        else:
                LMTD.append((dt_A[i]-dt_B[i])/np.log((dt_A[i]+dtmin)/(dt_B[i]+dtmin)))
        area.append(Q[i]/(U*LMTD[i]))
        Cp.append(ANNUALIZATIONFACTOR*FBM*e*((CEPCI2019/CEPCI1998) * 10**(K1+K2*np.log(area[i]))))


print(LMTD)
print(area)
print(Cp)

```




The operating cost of the added Cold and Hot Utility is calculated by using the following equation:

Equations

The table below recaps the operating cost of the added utilities:

```{python OpeCostHEN, echo = F, eval = F}
top = 24*0.95*365 #h/year
gas_fr = 0.08 # €/kWh
gas_ger = 0.08 # €/kWh 
elec_fr = 0.12 # €/kWh
elec_ger = 0.21 # €/kWh
COP = 3.5 #same assumption in Energy Bill

CUtil = [1531.18, 110.64, 175.6, 58.5]
HUtil = [142.6, 9.65, 167.5] 

CUtilCost = []
HUtilCost = []

for i in range(len(CUtil)):
        CUtilCost.append(CUtil[i]*top*elec_fr/COP)
for i in range(len(HUtil)):
        HUtilCost.append(HUtil[i]*top*gas_fr)

print(CUtilCost)
print(HUtilCost)

```

### Path following methods

...

### Loop Method

With our HEN design there is no possible loop. No cold and hot flows are connected twice via two different heat exchangers.






> Don't forget that we have provided examples in the guide book.