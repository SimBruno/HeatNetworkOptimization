
```{python Digester, echo = T, eval = T}
import numpy as np
import pandas as pd
from codes_01_energy_bill.coolprop_functions import mixture
from pyxosmose.state import State

p=100000 #Pa
TS_sludge = 0.037
VS_sludge = 0.742
BMP_sludge = 0.407 # m3_CH4/kg_VS
d1_dry = 0.01561
d1_liquid = 0.1018
d1 = d1_dry + d1_liquid
conversion_factor = 0.90
CH4_density = 0.657 # kg/m3
CH4_in_biogas = 0.55 # kg_CH4/kg_biogas (55% CH4 in biogas)
biogas_density = 1.15 # kg/m3
biogas_expansion = 0.15
U_digester = 2.5 # W/m2/°C
T_digester = 55 # °C
T_in = 20 # °C
cp_flow = 4180 # J/kg/°C

d3 = d1 * BMP_sludge * TS_sludge * VS_sludge * conversion_factor * CH4_density / CH4_in_biogas # kg/s
d2 = d1 - d3
print(' d1=', d1, '\n', 'd2=', d2, '\n', 'd3=', d3)

# Compute the Volume
time = 20 * 24 * 3600 # 20 days in seconds
V_biogas= d3 * time / biogas_density # m3
print('V=', V_biogas)

# Compute the surface area
V_digester = V_biogas * (1 + biogas_expansion) # m3
print('V_digester=', V_digester)

D = (4 * V_digester / (0.6 * np.pi))**(1/3) 
H = 0.6 * D
print(' H =', H, '\n', 'D =', D)
A = np.pi * D * H + 2 * np.pi * (D/2)**2 # cylindrical digester area
print ('A =', A)

# Compute the heat loss
Q_digester = U_digester * A * (T_digester - T_in) # W
print('Q_digester=', Q_digester)
Q_flow = cp_flow * d1 * (T_digester - T_in) # W
print('Q_flow=', Q_flow)
Q_tot = Q_digester + Q_flow
print('Q_tot=', Q_tot)

#Rotary Filter
d2_liquid = d1_liquid # Assumption : no water in biogas d3
d2_dry = d2 - d2_liquid
print('d2_liquid=', d2_liquid, '\n', 'd2_dry=', d2_dry)

d5_dry = d2_dry
d5_liquid = d5_dry
d5 = d5_dry + d5_liquid
d4 = d2_liquid - d5_liquid
print('d4=', d4, '\n', 'd5=', d5)

# Steam dryer
h_steam = 2250000 # J/kg source wikipedia at T = 100°C
Q_sd = d5 * (0.5-0.05) * h_steam # W from 50% to 5% water
print('Q_sd=', Q_sd)
d6 = d5 - 0.9 * d5_liquid # 90% of the water in d5 is removed
print(d6)

T7 = 150 + 273 # °C  --> is an assumption
T8 = 130 + 273 # °C  --> is an assumption

point7 = State(pair='TP', fluid='water', temperature=T7, pressure=p)
point7.StateCalc()
point7 = point7.__dict__ # Whole dictionary with properties
h7=point7["enthalpy"]
cp7=point7["cpmass"]
print('h7=', h7, 'cp7=', cp7)
d7 = Q_sd / (cp7 * (T7 - T8)) # kg/s
d8 = d7
print('d7=', d7)
print('d8=', d8)

#Create a dataframe with all the parameters

T1= T_in
T2= T_digester
T3= T2
T4= T2
T5=373
T6=T5

digester = pd.DataFrame(columns=['Point', 'Temperature (K)', 'Pressure (bar)', 'Mass flow rate (kg/s)'])
digester['Point']=['1', '2', '3', '4', '5', '6', '7', '8']
digester['Temperature (K)']=[T1,T2,T3,T4,T5,T6,T7,T8]
digester['Pressure (bar)']=[p,p,p,p,p,p,p,p]
digester['Mass flow rate (kg/s)']=[d1,d2,d3,d4,d5,d6,d7,d8]

print(digester)

```