# Rivella porduction analysis

Now that we have a better understanding of dairy process we have to evaluate the energy and mass balance of Rivella production to be able to compare later its costs with the digester.
The process is described in the following figure:

The process will be divided in 3 main parts:

1. The concentration of the whey 

2. The production of Rivella Green 

3. The production of Rivella Red

## 1. The concentration of the whey

All the whey is assumed to come from the evaporator stage with the following characteristics:

* 14.46% of dry matter, 
* 85.54% of water, 
* T=4°C, 
* p=1bar 
* mass flow rate of 1.52 kg/s.

At the end of the concentration process the whey will have the following characteristics:

* 50% of dry matter, 
* 50% of water, 
* T=100°C, 
* p=1bar 
* mass flow rate to be determined.

We assume, the following: in the fermentation we have heating from 4 to 25°C, the mixer is isothermal and the evaporator is adiabatic.
Also the bacterias are added at T=25°C and without disturbing the flow rate of the whey (m1=m3, m4=0 $m.s^{-1}$) and the aromas are added at T=25°C with 2g aromas/100g of whey.
Bacteria and aromas have the same heat capacity as water (cp=4184J/kgK).
The pressure stays constant at 1 bar.

```{python ConcentrationWhey, echo = T, eval = T}

from codes_01_energy_bill.coolprop_functions import mixture
from pyxosmose.state import State

#Fixed Parameters
m1=1.52 #kg.s-1
m2=0 #kg.s-1
m3=1.52 #kg.s-1
m4=0.02*m3 #kg.s-1
m5=m3+m4 #kg.s-1
#to get m6 we assume that R6 is only water and that the flow is a mixture of fat and water
#m6=1*mw6+0*mf6 so m6=mw6
#mw7=0.5m7=0.5*(m5-m6)
#mw6=mw5-mw7=0.8554*m5-0.5*(m5-m6)
#m6=[0.8554*m5-0.5*m5]/0.5
m6=(0.8554*m5-0.5*m5)/0.5 #kg.s-1
m7=m5-m6 #kg.s-1

T1=277 #K
T2=298 #K
T3=T2 #K
T4=T2 #K
T5=T2 #K
T6=373 #K
T7=T6 #K

Tsteam_out = 373 #K

p=1 #bar

R1 = mixture(T=T1, P=p, frac_water=0.8554, frac_fat=0.1446) # this is a dictionary!!
cp1=R1["cpmass"]
h1=R1["enthalpy"]

#Fermentation 
Qferm = m1*cp1*(T2-T1) #J/s

#Evaporator
Tsteam=373 #K
Steam = State(pair='TP', fluid='water', temperature=Tsteam, pressure=p)
Steam.StateCalc()
State_Steam = Steam.__dict__ # Whole dictionary with properties
hfg=State_Steam["enthalpy"]

h5=h1
cp5=cp1

R6 = mixture(T=T6, P=p, frac_water=1, frac_fat=0) # this is a dictionary!!
h6=R6["enthalpy"]

R7 = mixture(T=T7, P=p, frac_water=0.5, frac_fat=0.5) # this is a dictionary!!
h7=R7["enthalpy"]
cp7=R7["cpmass"]

Qevap = m5*cp5*(T7-T5) - m5*h5 + m6*h6 + m7*h7 #J/s
msteam = Qevap/hfg #kg/s
print(Qevap)
```

## 2. The production of Rivella Green 

30% of the concentrated whey is used for the Rivella Green production
The composition of the Rivella Green is the following: 

* 30% whey,
* 50% water,
* 20% sugar.

Tea is added at T=50°C, without disturbing the flow rate of the Rivella Green (m8=m10, m9=0 $m.s^{-1}$) 
The sugar and water are added are added at T=25°C (will thus cool the fluid and reduce the requirement for a steep change through HX2) and thus the mixer 3 is not isothermal anymore
CO2 is added without change of temperature and pressure (isothermal mixer) and without changing the mass flow (because we don't know the content of gas in each bottle).
The Rivella Green exits at T=10°C
The pressure stays constant at 1 bar during the entire production.

```{python RivellaGreen, echo = T, eval = T}
#Fixed Parameters
m8=0.3*m7 #kg.s-1
m10=m8 #kg.s-1
m9=0 #kg.s-1

TA=298 #K ref temperature
T8=323 #K
T9=323 #K
T10=T8
T11=298
T12=T11
T16=283 #K
T14=T16
T15=T16



#HX1: heater
QHX1=m7*cp7*(T7-T8) #J/s

#Mixer 3
#We first have to determine the different flows of this non-isothermal mixer
#we will use the composition of Rivella Green and assume water comes from both R10 (50% of the conc whey) and R11
#m13=m10+m11+m12
#m11=0.5*m13-0.5*m10
#m12=0.2*m13

m13=(0.5*m10)/0.3 #kg.s-1
m14=m13
m16=m14
m11=0.5*m13-0.5*m10
m12=0.2*m13

R10 = mixture(T=T10, P=p, frac_water=0.5, frac_fat=0.5) # this is a dictionary!!
cp10=R10["cpmass"]

R11 = mixture(T=T11, P=p, frac_water=1, frac_fat=0) # this is a dictionary!!
cp11=R11["cpmass"]
h11=R11["enthalpy"]

cp12=1224 #J/kgK

cp13 = 0.3*cp10 + 0.5*cp11 + 0.2*cp12

#From the heat balance of non-isothermal mixer we can then determine the temperature of the Rivella Green T13
#m13*cp13*(T13-TA)=m10*cp10*(T10-TA)+m11*cp11*(T11-TA)+m12*cp12*(T12-TA)

T13=((m10*cp10*(T10-TA)+m11*cp11*(T11-TA)+m12*cp12*(T12-TA))/(m13*cp13))+TA

#HX2: cooler1
QHX2=m13*cp13*(T13-T14) #J/s
```

## 3. The production of Rivella Red 

70% of the concentrated whey is used for the Rivella Red production
The composition of the Rivella Red is the following: 

* 30% whey,
* 35% water,
* 35% sugar.

The sugar and water are added are added at T=25°C (will thus cool the fluid and reduce the requirement for a steep change through HX2) and thus the mixer 3 is not isothermal anymore
CO2 is added without change of temperature and pressure (isothermal mixer) and without changing the mass flow (because we don't know the content of gas in each bottle).
The Rivella Red exits as Rivella Green at T=10°C
The pressure stays constant at 1 bar during the entire production.

```{python RivellaRed, echo = T, eval = T}
#Fixed Parameters
m17=0.7*m7 #kg.s-1


T17=T8 #K
T18=T11
T19=T11
T23=T16 #K
T22=T23
T21=T23


#Mixer 4
#We first have to determine the different flows of this non-isothermal mixer
#we will use the composition of Rivella Green and assume water comes from both R17 (50% of the conc whey) and R18
#m20=m17+m18+m19
#m18=0.35*m20-0.5*m17
#m19=0.35*m20
m20=(0.5*m17)/0.3 #kg.s-1
m21=m20
m23=m21
m18=0.35*m20-0.5*m17
m19=0.35*m20

R17 = mixture(T=T17, P=p, frac_water=0.5, frac_fat=0.5) # this is a dictionary!!
cp17=R17["cpmass"]
h17=R17["enthalpy"]

R18 = mixture(T=T18, P=p, frac_water=1, frac_fat=0) # this is a dictionary!!
cp18=R18["cpmass"]
h18=R18["enthalpy"]

cp19=1224 #J/kgK

cp20 = 0.3*cp17 + 0.35*cp18 + 0.35*cp19

#From the heat balance of non-isothermal mixer we can then determine the temperature of the Rivella Green T13
#m20*cp20*(T20-TA)=m17*cp17*(T17-TA)+m18*cp18*(T18-TA)+m19*cp19*(T19-TA)

T20=((m17*cp17*(T17-TA)+m18*cp18*(T18-TA)+m19*cp19*(T19-TA))/(m20*cp20))+TA
#HX2: cooler1
QHX2=m20*cp20*(T21-T20) #J/s

```


```{python SummaryData, echo = T, eval = T}
#Put everything in a dataframe
from IPython.display import HTML
import pandas as pd
import numpy as np

#Compute remaining enthalpies and heat capacities

cp2=4184 #J/kgK

h3=h1
cp3=cp1

cp4=4184 #J/kgK

R6 = State(pair='TP', fluid='water', temperature=T6, pressure=p)
R6.StateCalc()
State_R6 = R6.__dict__ # Whole dictionary with properties
h6=State_R6["enthalpy"]
cp6=State_R6["cpmass"]

R8 = mixture(T=T8, P=p, frac_water=0.5, frac_fat=0.5) 
h8=R8["enthalpy"]
cp8=R8["cpmass"]

h10=h8
cp10=cp8

h12=0 #CHECKKKKKKKKKKK HOW TO GET ENTHALPY SUGAR 
#m13*h13=m10*h10+m11*h11+m12*h12
h13=((m10*h10+m11*h11+m12*h12)/m13)

#m13(h13-h14)=m13*cp13*(T13-T14)
h14=h13-m13*cp13*(T13-T14)
cp14=cp13 #assume no change of cp with cooling for Rivella Green

h16=h14
cp16=cp13

h19=h16 #CHECKKKKKKKKKKK HOW TO GET ENTHALPY SUGAR

#m20*h20=m17*h17+m18*h18+m19*h19
h20=((m17*h17+m18*h18+m19*h19)/m20)

#m20(h20-h21)=m20*cp20*(T20-T21)
h21=h20-m20*cp20*(T20-T21)
cp21=cp20 #assume no change of cp with cooling for Rivella Red

h23=h21
cp23=cp20

#Create a dataframe with all the parameters

Rivella = pd.DataFrame(columns=['Point', 'Temperature (K)', 'Pressure (bar)', 'Mass flow rate (kg/s)', 'Heat capacity (J/kgK)', 'Enthalpy (J/kg)'])
Rivella['Point']=['1', '2', '3', '4', '5', '6', '7', '8', '9', '10','11','12','13','14','15','16','17','18','19','20','21','22','23']
Rivella['Temperature (K)']=[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23]
Rivella['Pressure (bar)']=[p,p,p,p,p,p,p,p,p,p,p,p,p,p,p,p,p,p,p,p,p,p,p]
Rivella['Mass flow rate (kg/s)']=[m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,'',m16,m17,m18,m19,m20,m21,'',m23]
Rivella['Heat capacity (J/kgK)']=[cp1,cp2,cp3,cp4,cp5,cp6,cp7,cp8,'',cp10,cp11,cp12,cp13,cp14,'',cp16,cp17,cp18,cp19,cp20,cp21,'',cp23]
Rivella['Enthalpy (J/kg)']=[h1,'',h3,'',h5,h6,h7,h8,'',h10,h11,'h12',h13,h14,'',h16,h17,h18,h19,h20,h21,'',h23]

HTML(Rivella.to_html())


#TBChecked
#CHECK FOR h12, h13, h14, h16 and h19,h20,h21,h23
#CHECK if consistent to assume that CO2 is added isothermically and without changing the mass flow rate
```